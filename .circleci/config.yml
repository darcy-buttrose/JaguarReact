# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Source/Projects/website/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          working_directory: Source/Projects/website
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "Source/Projects/website/package.json" }}

      # setup config
      - run:
          working_directory: Source/Projects
          command: |
            powershell
            function Get-IpAddress {
                if ($IsLinux -or $IsOSX) {
                  $ipInfo = ip -4 a | Select-String 'inet' | Select-String -Pattern '0.0.0.0' -NotMatch
                  if($ipInfo) {
                    $ipInfo = [regex]::matches($ipInfo,"\b(?:\d{1,3}\.){3}\d{1,3}\b") | ForEach-Object value
                  }
                }else{
                  $ipInfo = Get-NetIPAddress -AddressState Preferred -AddressFamily IPv4 | ForEach-Object IPAddress
                }

                $DEVHOSTIP = ($ipInfo | Where-Object {($_ -ne '127.0.0.1') -and ($_ -notlike '172.*') -and ($_ -notlike '*.255') } )
                return $DEVHOSTIP
            }
            $HOSTIP = Get-IpAddress
            (get-content ".\docker-compose-orig.yml") | foreach-object {$_ -replace "REPLACE_WITH_HOSTIP", $HOSTIP} | set-content "docker-compose.yml"
            (get-content ".\membership\appsettings.json.orig") | foreach-object {$_ -replace "REPLACE_WITH_HOSTIP", $HOSTIP} | set-content ".\membership\appsettings.json"
            (get-content ".\membership\hosting.json.orig") | foreach-object {$_ -replace "REPLACE_WITH_HOSTIP", $HOSTIP} | set-content ".\membership\hosting.json"
            (get-content ".\membership\Config.orig") | foreach-object {$_ -replace "REPLACE_WITH_HOSTIP", $HOSTIP} | set-content ".\membership\Config.cs"
            (get-content ".\membership\Startup.orig") | foreach-object {$_ -replace "REPLACE_WITH_HOSTIP", $HOSTIP} | set-content ".\membership\Startup.cs"
            (get-content ".\website\app\config\config.jsone") | foreach-object {$_ -replace "REPLACE_WITH_HOSTIP", $HOSTIP} | set-content ".\website\app\config\config.json"

      # run tests!
      - run:
          working_directory: Source/Projects/website
          command: npm run test
